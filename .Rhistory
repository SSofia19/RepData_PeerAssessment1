with(df, plot(Year, x,xlab="Year", ylab="Emissions", type="b", main="PM25 Emissions over Time")
)
source('~/Course Project 2/readfiles.R')
#plot a graph to show PM25 increase/decrease over time
with(df, plot(Year, x ,xlab="Year", ylab="Emissions", main="Total PM25 Emissions over Time"))
#copy graph to a png
dev.copy(png, file="ques1.png")
dev.off()
with(df, plot(Year, x ,xlab="Year", ylab="Emissions", type="l"
main="Total PM25 Emissions over Time"))
with(df, plot(Year, x ,xlab="Year", ylab="Emissions", type="l", main="Total PM25 Emissions over Time"))
#copy graph to a png
dev.copy(png, file="ques1.png")
dev.off()
df$Year<- as.factor(df$Year)
with(df, plot(Year, x ,xlab="Year", ylab="Emissions", type="l", main="Total PM25 Emissions over Time"))
df$Year<- as.character(df$Year)
with(df, plot(Year, x ,xlab="Year", ylab="Emissions", type="l", main="Total PM25 Emissions over Time"))
df$Year<- as.numeric(df$Year)
with(df, plot(Year, x ,xlab="Year", ylab="Emissions", type="l", main="Total PM25 Emissions over Time"))
df$Year<- as.factor(df$Year)
with(df, plot(Year, x ,xlab="Year", ylab="Emissions", type="l", main="Total PM25 Emissions over Time"))
#plot a graph to show PM25 increase/decrease over time
with(df, plot(x~Year ,xlab="Year", ylab="Emissions", type="l", main="Total PM25 Emissions over Time"))
source('~/Course Project 2/readfiles.R')
source('~/Course Project 2/readfiles.R')
#copy graph to a png
dev.copy(png, file="ques1.png")
dev.off()
source('~/Course Project 2/readfiles.R')
source('~/Course Project 2/readfiles.R')
?plot.factor
#plot a graph to show PM25 increase/decrease over time
with(df, barplot(x~Year ,xlab="Year", ylab="Emissions", type="l", main="Total PM25 Emissions over Time"))
#plot a graph to show PM25 increase/decrease over time
with(df, plot(x~Year ,xlab="Year", ylab="Emissions", type="l", barplot,main="Total PM25 Emissions over Time"))
source('~/Course Project 2/ques1.R')
source('~/Course Project 2/ques4.R')
coalm<-aggregate(coalmeasure$Emissions, by=list(Year=coalmeasure$year), FUN=sum)
library(ggplot2)
head(coalm)
qplot(x, Year, data=coalm)
qplot(Year, x, data=coalm, ylab="Coal Emissions (tons)", xlab="Years (1999-2008", main="US Coal Emissions") +geom_line()
qplot(Year, x, data=coalm, ylab="Coal Emissions (tons)", xlab="Years (1999-2008)", main="US Coal Emissions")
?qplot
qplot(Year, x, data=coalm, ylab="Coal Emissions (tons)", xlab="Years (1999-2008)", main="US Coal Emissions", group=Emission)+geom_line()
qplot(Year, x, data=coalm, ylab="Coal Emissions (tons)", xlab="Years (1999-2008)", main="US Coal Emissions", group=Emissions)+geom_line()
qplot(Year, x, data=coalm, ylab="Coal Emissions (tons)", xlab="Years (1999-2008)", main="US Coal Emissions", group=x)+geom_line()
qplot(Year, x, data=coalm, ylab="Coal Emissions (tons)", xlab="Years (1999-2008)", main="US Coal Emissions", group=x)+geom_histogram()
qplot(Year, x, data=coalm, ylab="Coal Emissions (tons)", xlab="Years (1999-2008)", main="US Coal Emissions", group=x)+geom_bar()
qplot(Year, x, data=coalm, ylab="Coal Emissions (tons)", xlab="Years (1999-2008)", main="US Coal Emissions")
swirl()
library(swil)
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=C("point", "smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=drv~.)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point","smooth"), facets=.~drv, method="loess")
source('~/ques6.R')
baltLA<-subset(vm, vm$fips == "24510" | vm$fips =="06037")
unique(baltLA$fips)
?aggregate
head(baltLA)
baltLASum<-aggregate(baltLA$Emissions, by=list(Fips=baltLA$Fips,Year=baltLA$year), FUN=sum)
baltLASum<-aggregate(baltLA$Emissions, by=list(Fips=baltLA$fips,Year=baltLA$year), FUN=sum)
View(baltLASum)
View(baltLA)
unique(fips$baltLA)
unique(baltLA$fips)
#Graph Totals
qplot(Year, x, data=baltLASum, color=Fips, ylab="Emissions (tons)", main="Total Yearly Emissions") + geom_line()
qplot(Year, x, data=baltLAAvg, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()
baltLAAVG<-aggregate(baltLA$Emissions, by=list(Fips=baltLA$fips, Year=baltLA$year), FUN=mean)
qplot(Year, x, data=baltLAAvg, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()
#Graph Averages
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()
View(baltLAAVG)
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(values=c("red", "blue"), labels=c("LA", "Baltimore"))
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(labels=c("LA", "Baltimore"))
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(colors=cond, (labels=c("LA", "Baltimore"))
)
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(colors=c("#9ECAE1", "#3282BD"), labels=c("LA", "Baltimore"))
#Graph Averages
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(values=c("pink", "cyan"), labels=c("LA", "Baltimore"))
#Graph Averages
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(values=c("magenta", "cyan"), labels=c("LA", "Baltimore"))
#Graph Averages
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(values=c("coral2", "steelblue4"), labels=c("LA", "Baltimore"))
#Graph Averages
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(values=c("coral", "steelblue"), labels=c("LA", "Baltimore"))
?scale_color_manual
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(values=c("darkpink", "steelblue"), labels=c("LA", "Baltimore"))
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(values=c("violet", "steelblue"), labels=c("LA", "Baltimore"))
baltLASum
baltLAChange<-subset(baltLASum, Year=="1999" | Year=="2008")
baltLAChange
baltLAChange<-aggregate(baltLAChange$x, by=list(Fips=baltaLAChange$Fips, Year=baltLAChange$Year), FUN=subtract*100)
baltLAChange<-aggregate(baltLAChange$x, by=list(Fips=baltaLAChange$Fips, Year=baltLAChange$Year), FUN=suB)
par(mfrow=c(2,1))
#Graph Totals
qplot(Year, x, data=baltLASum, color=Fips, ylab="Emissions (tons)", main="Total Yearly Emissions") + geom_line()+scale_color_manual(values=c("violet", "steelblue"), labels=c("LA", "Baltimore"))
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(values=c("violet", "steelblue"), labels=c("LA", "Baltimore"))
source('~/ques6.R')
multiplot(g1, g2, cols=2)
library(ggplot2)
multiplot(g1,g2)
install.packages("multiplot")
library("grid")
install.packages("grid")
install.packages("grid")
library(grid)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(g1,g2, ncol=2, main="Change in Emissions")
?grid.arrange
plot_grid(g1, g2, ncol=2, nrow=1)
library(cowplot)
library("cowplot")
install.packages("cowplot")
library(cowplot)
plot_grid(g1, g2, ncol=2, nrow=1)
plot_grid(g1, g2, ncol=1, nrow=2)
dev.copy(png, file="ques6.png")
dev.off()
source('~/ques6.R')
source('~/ques6.R')
#Graph Averages
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Yearly Emissions") + geom_line()+scale_color_manual(values=c("violet", "steelblue"), labels=c("LA", "Baltimore"))
#Create a png
dev.copy(png, file="ques6.png")
dev.off()
#Graph Averages
qplot(Year, x, data=baltLAAVG, color=Fips, ylab="Emissions (tons)", main="Average Motor Vehicle Emissions") + geom_line()+scale_color_manual(values=c("violet", "steelblue"), labels=c("LA", "Baltimore"))
#Create a png
dev.copy(png, file="ques6.png")
dev.off()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
g<-ggplot(mpg, aes(displ, hwy))
g
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm", facet_grid=.~drv)
g+geom_point()+geom_smooth(method="lm")+ facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+ facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, color=drv)
g+geom_point(size=4, alpha=1/2, aes(color=drv)
)
g+geom_point(color=drv)+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(color="drv")+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv)+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
)
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line()+ylim(-3,3)
g+coord_cartesian(ylim=c(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(x=displ, y=hwy, color=year)
g<-ggplot(x=displ, y=hwy, color=factor(year)
)
g<-ggplot(x=displ, y=hwy, color="year")
g<-ggplot(mpg, x=displ, y=hwy, color=year
)
g<-ggplot(mpg, x=displ, y=hwy, color=factor(year)))
g<-ggplot(mpg, x=displ, y=hwy, color=factor(year))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSO, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE
, size=2, color="black")
)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom=c("point", "smooth"), method="lm")
qplot(carat, price, data=diamonds, color=cut, geom=c("point", "smooth"), method="lm", facets=.~cut)
g<-ggplot(diamonds, aes(depth, price))
summary(g)
g<-ggplot(diamonds, aes(depth, price))+geom_point(alpha=1/3)
g+geom_point(alpha-1/3)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat, seq=c(0,1,length=4), na.rm=TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
x
diamonds$car2<-diamdonds$carat
diamonds<-diamonds$car2, cut, cutpoints
cut<-diamonds$car2, cut, cutpoints
source('~/RepAssign1.R')
View(maxavg)
total2<-aggregate(activity1$steps, by=list(Day=activity1$date), FUN=sum)
View(total2)
hist(total2$x, main="Daily Step Totals w/NA replacement", xlab="Steps")
View(activity1)
View(activity)
source('~/RepAssign1.R')
View(activity1)
identical(activity1$steps, acitivity$steps)
identical(activity1$steps, activity$steps)
identical(mean2,mean)
mean2<-mean(total2$x)
median2<-median(total2$x)
mean2
View(total2)
View(activity1)
check<-subset(activity1, date=="2012-10-08")
View(check)
check2<-subset(activity, date="2012-10-08")
View(check2)
for (i in 1:17568) {
if ((is.na(activity1$steps[i]==TRUE))&& (identical(activity1$interval[i], timestep$Interval[i])==TRUE)) {
activity1$steps[i]<-timestep$x[i]
}
}
View(activity1)
sum(is.na(activity1$steps))
View(timestep)
for (i in 1:17568) {
if ((is.na(activity1$steps[i]==TRUE))&& (activity1$interval[i]==timestep$Interval[i])==TRUE)) {
activity1$steps[i]<-timestep$x[i]
}
}
for (i in 1:17568) {
if ((is.na(activity1$steps[i]==TRUE))&& ((activity1$interval[i]==timestep$Interval[i])==TRUE)) {
activity1$steps[i]<-timestep$x[i]
}
}
for (i in 1:17568) {
if (is.na(activity1$steps[i]==TRUE)){
if (identical(activity1$interval[i]==timestep$Interval[i]))==TRUE {
activity1$steps[i]<-timestep$x[i]
}
}
source('~/RepAssign1.R')
identical(mean, mean2)
mean2
median2
View(activity1)
identical(activity$steps, activity1$steps)
sum(is.na(activity1$steps))
View(activity1)
View(activity)
View(total2)
total2<-aggregate(activity1$steps, by=list(Day=activity1$date), FUN=sum)
View(total2)
View(dailytotal)
source('~/RepAssign1.R')
source('~/RepAssign1.R')
sum(is.na(activity1$steps))
sum(activity1$steps)
sum(activity$steps)
sum(activity$steps, na.rm=TRUE)
View(total2)
activity1<-activity
for (i in 1:length(activity1$steps)) {
if ((is.na(activity1$steps[i]==TRUE))&& (identical(activity1$interval[i], timestep$Interval[i])==TRUE)) {
activity1$steps<-timestep$x
}
}
total2<-aggregate(activity1$steps, by=list(Day=activity1$date), FUN=sum)
activity1<-activity
for (i in 1:length(activity1$steps)) {
if ((is.na(activity1$steps[i]==TRUE))&& (identical(activity1$interval[i], timestep$Interval[i])==TRUE)) {
activity1$step[i]<-timestep$x[i]
}
}
total2<-aggregate(activity1$steps, by=list(Day=activity1$date), FUN=sum)
View(total2)
sum(is.na(activity1$steps))
View(activity1)
for (i in 1:length(activity1$steps)) {
if ((is.na(activity1$steps[i]==TRUE))&& (identical(activity1$interval[i], timestep$Interval[i])==TRUE)) {
activity1$step[i]<-timestep$x[i]
}
}
View(activity1)
source('~/RepAssign1.R')
View(activity1)
View(total2)
activity1<-activity
for (i in 1:length(activity1$steps)) {
if (is.na(activity1$steps[i]==TRUE){
for (i in 1:length(activity1$steps){
if ((activity1$interval[i]== timestep$Interval[i])==TRUE) {
activity1$steps[i]<-timestep$x[i]
}
}
}
}
for (i in 1:length(activity1$steps)) {
if (is.na(activity1$steps[i]==TRUE){
for (i in 1:length(activity1$steps){
if (activity1$interval[i]== timestep$Interval[i]) {
activity1$steps[i]<-timestep$x[i]
}
}
}
}
library(swirl)
swirl()
bye()
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageversion("dplyr")
packageVersion("dplyr")
cran<- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r-arch)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size)
)
filter(cran, package =="swirl")
View(timestep)
filter(cran, r_version == "3.1.1", country=="US")
?Comparison
filter(cran, r_version == "3.0.2", country=="IN")
filter(cran, r_version <= "3.0.2", country=="IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size > 100500, r_os="linux-gnu")
filter(cran, r_os="linux-gnu")
filter(cran, size > 100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version) )
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
source('~/RepAssign1.R')
source('~/RepAssign1.R')
source('~/RepAssign1.R')
source('~/RepAssign1.R')
source('~/RepAssign1.R')
source('~/RepAssign1.R')
source('~/RepAssign1.R')
View(timestep)
View(dailytotal)
total2<-aggregate(activity1$steps, by=list(Intervl=activity1$interval), FUN=mean)
View(total2)
hist(total2$x, main="Daily Step Totals NA's removed")
hist(total2$x, main="Daily Step Totals NA's removed", xlab="Steps")
sum(is.na(activity1$steps))
source('~/RepAssign1.R')
?mfrow
sum(dailytotal$x)
sum(dailytotal$x)- sum(total2$x)
sum(total2$x)-sum(dailytotal$x)
sum(total2$x)
sum(dailytotal$x)
par(mfrow=c(1,2))
hist(dailytotal$x, main="Daily Step totals", xlab="Steps")
hist(total2$x, main="Daily Step Totals NA's removed", xlab="Steps")
par(mfrow=c(2,1))
hist(total2$x, main="Daily Step Totals NA's removed", xlab="Steps")
par(mfrow=c(2,1))
hist(dailytotal$x, main="Daily Step totals", xlab="Steps")
hist(total2$x, main="Daily Step Totals NA's removed", xlab="Steps")
par(mfrow=c(2,1))
hist(dailytotal$x, main="Daily Step totals", xlab="Steps")
hist(total2$x, main="Daily Step Totals", sub=""NA's replaced by Average", xlab="Steps")
par(mfrow=c(2,1))
hist(dailytotal$x, main="Daily Step totals", xlab="Steps")
hist(total2$x, main="Daily Step Totals", sub="NA's replaced by Average", xlab="Steps")
source('~/RepAssign1.R')
identical(mean, mean2)
identical(median, median2)
mean-mean2
median-median2
mean
mean2
median
median2
library(knitr)
?knitr
library(swirl)
swirl()
bye()
source('~/RepAssign1.R')
source('~/RepAssign1.R')
getwd()
setwd("./data")
getwd()
summary(activity)
ls()
View(total2)
dailytotal<-aggregate(list(Steps=activity$steps), by=list(Day=activity$date), FUN=sum, na.rm=TRUE)
View(dailytotal)
hist(dailytotal$Steps, main="Daily Step totals", xlab="Steps")
View(dailytotal)
View(activity1)
library(swirl)
swirl()
mydf<- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
tbl_df
mydf
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, 1(X:size))
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country =="US", country =="IN")
filter(cran, country =="US" | country =="IN")
filter(cran, size > 100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
select(cran, size:ip_id)
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/ 2^20)
bye()
days<-tbl_df(activity1)
mutate(days, day=weekday(date))
mutate(days, day=date)
View(activity1)
View(activity1)
days<-mutate(days, day=date)
View(activity1)
View(days)
days<-mutate(days, day=weekdays(date)
)
?weekday
?weekdays
days<-weekdays(days$day)
weekdays(days$day)
class(days$day)
days<-as.Date(as.character(days$date))
days<-mutate(days, day=weekdays(date)
)
days<-weekdays(days$day)
weekdays(days$day)
weekdays(days$day[1])
weekdays(days$date[1])
